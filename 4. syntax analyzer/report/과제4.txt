교재의 5장에서 설명한 신택스분석기를 완성하고 실험하시오.

우리의 구현하려고하는 C언어 컴파일러는 강의중 설명한대로 표준 C 언어와는 조금 다르게 몇가지 명령문과 연산자를 생략 (혹은 변경)하였고 함수의 매개변수 타입과 갯수도 검사하지 않도록 하였으니 여기에 맞춰 컴파일러를 완성하기 바랍니다.

5장의 프로그램들이 32비트 기계에 맞게 작성되어있어서 64비트 기계에서 수행할 경우 오류가 발생될수있습니다. 본 신택스분석기의 Yacc/Lex 프로그램중에서 yylval 의 값이 정수 혹은 포인터 값을 저장하도록 하고있는데, 64 비트 기계는 보통 정수를 4바이트에 저장하고 포인터는 8바이트로 저장하고 있어서 포인터값을 정수로 변환저장하는 경우 그 값이 잘리게되어 오류가 발생할수있습니다.    이를 해결하기 위해서는 yylval 이나 스택의두번째트랙을 8바이트로 선언하여 하여야 하는데 이러기 위해서 다음의 두줄을 yacc 과 lex 프로그램의 제일 앞부분에 넣어야 합니다. 

   #define YYSTYPE_IS_DECLARED  1

   typedef long YYSTYPE;

그리고 Yacc/Lex 프로그램중에 포인터값을 리턴하는 함수를 호출하거나 사용하기 위해서는 미리 프로토타입을 선언하고 사용하여야할것입니다.

그리고 lex 프로그램도 추가/수정하여

   정수인 경우 yylaval 은 그 정수값, 문자상수인경우는 yylval은 그 문자값,

   실수나 스트링상수인 경우는 yylval 은 그 문자열을 가지도록 해야하며, 

   이름이 나오는 경우에 typedef 로 선언된 이름은 TYPE_IDENTIFIER 로 리턴하고 (이때 yylval 값은 그 타입테이블주소),

   기타 일반 이름은 그냥 IDENTIFIER 로 리턴하도록 (이때 yylval 은 이름의 문자열) 하여야한다 (checkIdentifier 함수 참고).

실험은 충분한 예를 가지고 실험하고, 과제보고서는 모든 내용을 한개의 화일로 작성하고 원시프로그램은 한개 첨부화일로 압축하여 제출하기 바랍니다. 마지막으로 생성된 신택스트리를 간단히 출력하는 프로그램을 첨부화일로 올리니 신택스트리를 눈으로 확인하는데 사용하도록합니다.